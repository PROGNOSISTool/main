version: '3.8'
services:
  implementation:
    image: ghcr.io/prognosistool/implementation/tcp-smoltcp:sha-c9e632a
    platform: linux/amd64
    init: true
    tty: true
    privileged: true
    ports:
      - "4433:4433/udp"
      - "44344:44344/tcp"
    cap_add:
      - NET_RAW
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.tcp_syncookies: 0
      net.ipv4.ip_forward: 1
      net.bridge.bridge-nf-call-arptables: 0
      net.bridge.bridge-nf-call-ip6tables: 0
      net.bridge.bridge-nf-call-iptables: 0
      net.ipv4.conf.all.proxy_arp: 1
      net.ipv4.conf.all.arp_filter: 1
    volumes:
      - ./output/implementation:/output/
  database:
    image: postgres:15-alpine
    platform: linux/amd64
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=prognosis
      - POSTGRES_DB=prognosis
      - POSTGRES_USER=prognosis
    volumes:
      - ./output/database:/var/lib/postgresql/data/
  adapter:
    image: ghcr.io/prognosistool/adapter/tcp:sha-b14f36c
    privileged: true
    platform: linux/amd64
    depends_on:
      - "implementation"
      - "database"
    ports:
      - "3333:3333"
      - "5678:5678"
    volumes:
      - ./config.yaml:/root/config.yaml
      - ./output/adapter/:/root
      - /lib/modules:/lib/modules
    cap_add:
      - NET_RAW
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.tcp_syncookies: 0
      net.ipv4.conf.all.proxy_arp: 1
      net.ipv4.conf.all.arp_filter: 1
  learner:
    image: ghcr.io/prognosistool/learner:sha-c202d4d
    platform: linux/amd64
    depends_on:
      - "adapter"
    volumes:
      - ./config.yaml:/usr/src/learner/config.yaml
      - ./output/learner/:/usr/src/learner/output/
      - ./output/cache/:/usr/src/learner/cache/
  synthesizer:
    build: ./Synthesis
    depends_on:
      - "adapter"
    volumes:
      - ./config.yaml:/code/config.yaml
      - ./output/learner/final/:/data/learner/
      - ./output/adapter/:/data/adapter/
      - ./output/synth/:/data/synth/
